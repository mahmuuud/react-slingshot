version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm i
      - save_cache:
          paths:
            - /src/node_modules
          key: "npm-packages"
      - run: npm run lint
  
  test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: 
            - "npm-packages"
      - run: npm i
      - run: npm test
  
  analyze:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: npm audit

  create-infra:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: creates or updates the stack if it exists
          command: |
            aws cloudformation deploy \
              --template-file infra.yml \
              --stack-name my-stack

  create-ansible-inventory:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: echo "[all]" > inventory.txt
      - run: aws ec2 describe-instances --query 'Reservations[*].Instances[*].PublicIpAddress' --filters "Name=tag:name,Values=udacity" --output text >> inventory.txt
      - run: cat inventory.txt
      - save_cache:
          paths:
            - inventory.txt
          key: "cached-inventory"


  configure_server:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["20:3c:61:cb:f4:9b:41:ae:74:dd:02:0a:d5:ee:0e:53"]
      - restore_cache:
          keys: 
            - "cached-inventory"
      - run: apk add --update ansible
      - run: cat inventory.txt
      - run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i inventory.txt playbook.yml
      

      

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - create-infra
      - create-ansible-inventory:
          requires:
            - create-infra
      - configure_server:
          requires:
            - create-ansible-inventory
      # - build
      # - test:
      #     requires:
      #       - build
      # - analyze:
      #     requires:
      #       - test
